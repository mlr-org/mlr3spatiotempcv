% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ResamplingSptCVCstf.R
\name{ResamplingSptCVCstf}
\alias{ResamplingSptCVCstf}
\title{(CAST) "Leave-location-and-time-out" resampling}
\description{
Create spatial, temporal or spatio-temporal Folds for cross validation
}
\details{
Using "class" is helpful in the case that data are clustered in space
and are categorical. E.g This is the case for land cover classifications when
training data come as training polygons. In this case the data should be split in a way
that entire polygons are held back (spacevar="polygonID") but at the same time the distribution of classes
should be similar in each fold (class="LUC").
}
\note{
Standard k-fold cross-validation can lead to considerable
misinterpretation in spatial-temporal modelling tasks. This function can be
used to prepare a Leave-Location-Out, Leave-Time-Out or
Leave-Location-and-Time-Out cross-validation as target-oriented validation
strategies for spatial-temporal prediction tasks. See Meyer et al. (2018)
for further information.
}
\section{{mlr3spatiotempcv} notes}{


The 'Description', 'Details' and 'Note' fields are inherited from the
respective upstream function.

For a list of available arguments, please see \link[CAST:CreateSpacetimeFold]{CAST::CreateSpacetimeFold}.
}

\examples{
library(mlr3)
task = tsk("cookfarm")

# Instantiate Resampling
rcv = rsmp("sptcv_cstf",
  folds = 5,
  time_var = "Date", space_var = "SOURCEID")
rcv$instantiate(task)

# Individual sets:
rcv$train_set(1)
rcv$test_set(1)
# check that no obs are in both sets
intersect(rcv$train_set(1), rcv$test_set(1)) # good!

# Internal storage:
rcv$instance # table
}
\references{
Meyer H, Reudenbach C, Hengl T, Katurji M, Nauss T (2018).
\dQuote{Improving performance of spatio-temporal machine learning models using forward feature selection and target-oriented validation.}
\emph{Environmental Modelling & Software}, \bold{101}, 1--9.
\doi{10.1016/j.envsoft.2017.12.001}.
}
\section{Super class}{
\code{\link[mlr3:Resampling]{mlr3::Resampling}} -> \code{ResamplingSptCVCstf}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{space_var}}{\code{character(1)}\cr
Column name identifying the spatial units.}

\item{\code{time_var}}{\code{character(1)}\cr
Column name identifying the temporal units.}

\item{\code{class}}{\code{character(1)}\cr
Column name identifying a class unit (e.g. land cover).}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{iters}}{\code{integer(1)}\cr
Returns the number of resampling iterations, depending on the
values stored in the \code{param_set}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ResamplingSptCVCstf$new()}}
\item \href{#method-instantiate}{\code{ResamplingSptCVCstf$instantiate()}}
\item \href{#method-clone}{\code{ResamplingSptCVCstf$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="format">}\href{../../mlr3/html/Resampling.html#method-format}{\code{mlr3::Resampling$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="help">}\href{../../mlr3/html/Resampling.html#method-help}{\code{mlr3::Resampling$help()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="print">}\href{../../mlr3/html/Resampling.html#method-print}{\code{mlr3::Resampling$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="test_set">}\href{../../mlr3/html/Resampling.html#method-test_set}{\code{mlr3::Resampling$test_set()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Resampling" data-id="train_set">}\href{../../mlr3/html/Resampling.html#method-train_set}{\code{mlr3::Resampling$train_set()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a "Spacetime Folds" resampling instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResamplingSptCVCstf$new(
  id = "sptcv_cstf",
  space_var = NULL,
  time_var = NULL,
  class = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{\code{character(1)}\cr
Identifier for the resampling strategy.}

\item{\code{space_var}}{\code{character(1)}\cr
Column name identifying the spatial units.}

\item{\code{time_var}}{\code{character(1)}\cr
Column name identifying the temporal units.}

\item{\code{class}}{\code{character(1)}\cr
Column name identifying a class unit (e.g. land cover).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-instantiate"></a>}}
\if{latex}{\out{\hypertarget{method-instantiate}{}}}
\subsection{Method \code{instantiate()}}{
Materializes fixed training and test splits for a given task.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResamplingSptCVCstf$instantiate(task)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{\link{Task}\cr
A task to instantiate.}

\item{\code{space_var}}{\verb{[character]}\cr
Column name identifying the spatial units.}

\item{\code{time_var}}{\verb{[character]}\cr
Column name identifying the temporal units.}

\item{\code{class}}{\verb{[character]}\cr
Column name identifying a class unit (e.g. land cover).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResamplingSptCVCstf$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
